### YamlMime:ManagedReference
items:
- uid: RayGame.Mesh
  commentId: T:RayGame.Mesh
  id: Mesh
  parent: RayGame
  children:
  - RayGame.Mesh.#ctor(System.Numerics.Vector2[])
  - RayGame.Mesh.#ctor(System.ValueTuple{System.Single,System.Single}[])
  - RayGame.Mesh.AddVertex(System.Numerics.Vector2)
  - RayGame.Mesh.AddVertex(System.ValueTuple{System.Single,System.Single})
  - RayGame.Mesh.AddVertices(System.Numerics.Vector2[])
  - RayGame.Mesh.AddVertices(System.ValueTuple{System.Single,System.Single}[])
  - RayGame.Mesh.DeleteLastVertex
  - RayGame.Mesh.DeleteVertex(System.Int32)
  - RayGame.Mesh.DeleteVertex(System.ValueTuple{System.Single,System.Single})
  - RayGame.Mesh.GetVertexArray
  - RayGame.Mesh.InsertVertex(System.Int32,System.Numerics.Vector2)
  - RayGame.Mesh.RotateMesh(System.Single)
  - RayGame.Mesh.ScaleMesh(System.Single)
  - RayGame.Mesh.ShiftMesh(System.Numerics.Vector2)
  - RayGame.Mesh.ShiftMesh(System.ValueTuple{System.Single,System.Single})
  langs:
  - csharp
  - vb
  name: Mesh
  nameWithType: Mesh
  fullName: RayGame.Mesh
  type: Class
  source:
    remote:
      path: RayGame/Mesh.cs
      branch: main
      repo: https://github.com/Kraaven/RayEngine.git
    id: Mesh
    path: ../RayGame/Mesh.cs
    startLine: 15
  assemblies:
  - RayGame
  namespace: RayGame
  summary: Represents a 2D mesh consisting of a collection of vertices.
  remarks: >-
    A Mesh is a collection of Vertices that is used to display/render anything. It is always a closed loop. The Mesh also have functions that can edit it, however, be careful, as all modifications as *permanent*.

    It is Attached to a <xref href="RayGame.MeshRenderer" data-throw-if-not-resolved="false"></xref> to be viewed at the <xref href="RayGame.GameObject" data-throw-if-not-resolved="false"></xref>'s Position. The vertices themselves are always represented in local space.
  example: []
  syntax:
    content: public class Mesh
    content.vb: Public Class Mesh
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: RayGame.Mesh.#ctor(System.ValueTuple{System.Single,System.Single}[])
  commentId: M:RayGame.Mesh.#ctor(System.ValueTuple{System.Single,System.Single}[])
  id: '#ctor(System.ValueTuple{System.Single,System.Single}[])'
  parent: RayGame.Mesh
  langs:
  - csharp
  - vb
  name: Mesh((float, float)[])
  nameWithType: Mesh.Mesh((float, float)[])
  fullName: RayGame.Mesh.Mesh((float, float)[])
  type: Constructor
  source:
    remote:
      path: RayGame/Mesh.cs
      branch: main
      repo: https://github.com/Kraaven/RayEngine.git
    id: .ctor
    path: ../RayGame/Mesh.cs
    startLine: 24
  assemblies:
  - RayGame
  namespace: RayGame
  summary: Initializes a new instance of the <xref href="RayGame.Mesh" data-throw-if-not-resolved="false"></xref> class with an array of vertices specified as tuples.
  example: []
  syntax:
    content: public Mesh((float, float)[] vertexArray)
    parameters:
    - id: vertexArray
      type: System.ValueTuple{System.Single,System.Single}[]
      description: An array of tuples representing the vertices of the mesh.
    content.vb: Public Sub New(vertexArray As (Single, Single)())
  overload: RayGame.Mesh.#ctor*
  nameWithType.vb: Mesh.New((Single, Single)())
  fullName.vb: RayGame.Mesh.New((Single, Single)())
  name.vb: New((Single, Single)())
- uid: RayGame.Mesh.#ctor(System.Numerics.Vector2[])
  commentId: M:RayGame.Mesh.#ctor(System.Numerics.Vector2[])
  id: '#ctor(System.Numerics.Vector2[])'
  parent: RayGame.Mesh
  langs:
  - csharp
  - vb
  name: Mesh(Vector2[])
  nameWithType: Mesh.Mesh(Vector2[])
  fullName: RayGame.Mesh.Mesh(System.Numerics.Vector2[])
  type: Constructor
  source:
    remote:
      path: RayGame/Mesh.cs
      branch: main
      repo: https://github.com/Kraaven/RayEngine.git
    id: .ctor
    path: ../RayGame/Mesh.cs
    startLine: 33
  assemblies:
  - RayGame
  namespace: RayGame
  summary: Initializes a new instance of the <xref href="RayGame.Mesh" data-throw-if-not-resolved="false"></xref> class with an array of vertices specified as <xref href="System.Numerics.Vector2" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Mesh(Vector2[] vertexArray)
    parameters:
    - id: vertexArray
      type: System.Numerics.Vector2[]
      description: An array of <xref href="System.Numerics.Vector2" data-throw-if-not-resolved="false"></xref> representing the vertices of the mesh.
    content.vb: Public Sub New(vertexArray As Vector2())
  overload: RayGame.Mesh.#ctor*
  nameWithType.vb: Mesh.New(Vector2())
  fullName.vb: RayGame.Mesh.New(System.Numerics.Vector2())
  name.vb: New(Vector2())
- uid: RayGame.Mesh.AddVertices(System.Numerics.Vector2[])
  commentId: M:RayGame.Mesh.AddVertices(System.Numerics.Vector2[])
  id: AddVertices(System.Numerics.Vector2[])
  parent: RayGame.Mesh
  langs:
  - csharp
  - vb
  name: AddVertices(Vector2[])
  nameWithType: Mesh.AddVertices(Vector2[])
  fullName: RayGame.Mesh.AddVertices(System.Numerics.Vector2[])
  type: Method
  source:
    remote:
      path: RayGame/Mesh.cs
      branch: main
      repo: https://github.com/Kraaven/RayEngine.git
    id: AddVertices
    path: ../RayGame/Mesh.cs
    startLine: 42
  assemblies:
  - RayGame
  namespace: RayGame
  summary: Adds an array of vertices to the mesh.
  example: []
  syntax:
    content: public void AddVertices(Vector2[] vertexArray)
    parameters:
    - id: vertexArray
      type: System.Numerics.Vector2[]
      description: An array of <xref href="System.Numerics.Vector2" data-throw-if-not-resolved="false"></xref> to add to the mesh.
    content.vb: Public Sub AddVertices(vertexArray As Vector2())
  overload: RayGame.Mesh.AddVertices*
  nameWithType.vb: Mesh.AddVertices(Vector2())
  fullName.vb: RayGame.Mesh.AddVertices(System.Numerics.Vector2())
  name.vb: AddVertices(Vector2())
- uid: RayGame.Mesh.AddVertices(System.ValueTuple{System.Single,System.Single}[])
  commentId: M:RayGame.Mesh.AddVertices(System.ValueTuple{System.Single,System.Single}[])
  id: AddVertices(System.ValueTuple{System.Single,System.Single}[])
  parent: RayGame.Mesh
  langs:
  - csharp
  - vb
  name: AddVertices((float, float)[])
  nameWithType: Mesh.AddVertices((float, float)[])
  fullName: RayGame.Mesh.AddVertices((float, float)[])
  type: Method
  source:
    remote:
      path: RayGame/Mesh.cs
      branch: main
      repo: https://github.com/Kraaven/RayEngine.git
    id: AddVertices
    path: ../RayGame/Mesh.cs
    startLine: 51
  assemblies:
  - RayGame
  namespace: RayGame
  summary: Adds an array of vertices to the mesh specified as tuples.
  example: []
  syntax:
    content: public void AddVertices((float, float)[] vertexArray)
    parameters:
    - id: vertexArray
      type: System.ValueTuple{System.Single,System.Single}[]
      description: An array of tuples representing the vertices to add to the mesh.
    content.vb: Public Sub AddVertices(vertexArray As (Single, Single)())
  overload: RayGame.Mesh.AddVertices*
  nameWithType.vb: Mesh.AddVertices((Single, Single)())
  fullName.vb: RayGame.Mesh.AddVertices((Single, Single)())
  name.vb: AddVertices((Single, Single)())
- uid: RayGame.Mesh.AddVertex(System.Numerics.Vector2)
  commentId: M:RayGame.Mesh.AddVertex(System.Numerics.Vector2)
  id: AddVertex(System.Numerics.Vector2)
  parent: RayGame.Mesh
  langs:
  - csharp
  - vb
  name: AddVertex(Vector2)
  nameWithType: Mesh.AddVertex(Vector2)
  fullName: RayGame.Mesh.AddVertex(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: RayGame/Mesh.cs
      branch: main
      repo: https://github.com/Kraaven/RayEngine.git
    id: AddVertex
    path: ../RayGame/Mesh.cs
    startLine: 60
  assemblies:
  - RayGame
  namespace: RayGame
  summary: Adds a single vertex to the mesh.
  example: []
  syntax:
    content: public void AddVertex(Vector2 vertex)
    parameters:
    - id: vertex
      type: System.Numerics.Vector2
      description: The vertex to add to the mesh.
    content.vb: Public Sub AddVertex(vertex As Vector2)
  overload: RayGame.Mesh.AddVertex*
- uid: RayGame.Mesh.AddVertex(System.ValueTuple{System.Single,System.Single})
  commentId: M:RayGame.Mesh.AddVertex(System.ValueTuple{System.Single,System.Single})
  id: AddVertex(System.ValueTuple{System.Single,System.Single})
  parent: RayGame.Mesh
  langs:
  - csharp
  - vb
  name: AddVertex((float, float))
  nameWithType: Mesh.AddVertex((float, float))
  fullName: RayGame.Mesh.AddVertex((float, float))
  type: Method
  source:
    remote:
      path: RayGame/Mesh.cs
      branch: main
      repo: https://github.com/Kraaven/RayEngine.git
    id: AddVertex
    path: ../RayGame/Mesh.cs
    startLine: 69
  assemblies:
  - RayGame
  namespace: RayGame
  summary: Adds a single vertex to the mesh specified as a tuple.
  example: []
  syntax:
    content: public void AddVertex((float, float) vertex)
    parameters:
    - id: vertex
      type: System.ValueTuple{System.Single,System.Single}
      description: The vertex to add to the mesh.
    content.vb: Public Sub AddVertex(vertex As (Single, Single))
  overload: RayGame.Mesh.AddVertex*
  nameWithType.vb: Mesh.AddVertex((Single, Single))
  fullName.vb: RayGame.Mesh.AddVertex((Single, Single))
  name.vb: AddVertex((Single, Single))
- uid: RayGame.Mesh.ShiftMesh(System.Numerics.Vector2)
  commentId: M:RayGame.Mesh.ShiftMesh(System.Numerics.Vector2)
  id: ShiftMesh(System.Numerics.Vector2)
  parent: RayGame.Mesh
  langs:
  - csharp
  - vb
  name: ShiftMesh(Vector2)
  nameWithType: Mesh.ShiftMesh(Vector2)
  fullName: RayGame.Mesh.ShiftMesh(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: RayGame/Mesh.cs
      branch: main
      repo: https://github.com/Kraaven/RayEngine.git
    id: ShiftMesh
    path: ../RayGame/Mesh.cs
    startLine: 79
  assemblies:
  - RayGame
  namespace: RayGame
  summary: Shifts the entire mesh by the specified offset in Position.
  example: []
  syntax:
    content: public Mesh ShiftMesh(Vector2 Offset)
    parameters:
    - id: Offset
      type: System.Numerics.Vector2
      description: The offset by which to shift the mesh.
    return:
      type: RayGame.Mesh
      description: The shifted mesh.
    content.vb: Public Function ShiftMesh(Offset As Vector2) As Mesh
  overload: RayGame.Mesh.ShiftMesh*
- uid: RayGame.Mesh.ShiftMesh(System.ValueTuple{System.Single,System.Single})
  commentId: M:RayGame.Mesh.ShiftMesh(System.ValueTuple{System.Single,System.Single})
  id: ShiftMesh(System.ValueTuple{System.Single,System.Single})
  parent: RayGame.Mesh
  langs:
  - csharp
  - vb
  name: ShiftMesh((float, float))
  nameWithType: Mesh.ShiftMesh((float, float))
  fullName: RayGame.Mesh.ShiftMesh((float, float))
  type: Method
  source:
    remote:
      path: RayGame/Mesh.cs
      branch: main
      repo: https://github.com/Kraaven/RayEngine.git
    id: ShiftMesh
    path: ../RayGame/Mesh.cs
    startLine: 91
  assemblies:
  - RayGame
  namespace: RayGame
  summary: Shifts the entire mesh by the specified offset in Position.
  example: []
  syntax:
    content: public Mesh ShiftMesh((float, float) Offset)
    parameters:
    - id: Offset
      type: System.ValueTuple{System.Single,System.Single}
      description: The offset specified as a tuple by which to shift the mesh.
    return:
      type: RayGame.Mesh
      description: The shifted mesh.
    content.vb: Public Function ShiftMesh(Offset As (Single, Single)) As Mesh
  overload: RayGame.Mesh.ShiftMesh*
  nameWithType.vb: Mesh.ShiftMesh((Single, Single))
  fullName.vb: RayGame.Mesh.ShiftMesh((Single, Single))
  name.vb: ShiftMesh((Single, Single))
- uid: RayGame.Mesh.RotateMesh(System.Single)
  commentId: M:RayGame.Mesh.RotateMesh(System.Single)
  id: RotateMesh(System.Single)
  parent: RayGame.Mesh
  langs:
  - csharp
  - vb
  name: RotateMesh(float)
  nameWithType: Mesh.RotateMesh(float)
  fullName: RayGame.Mesh.RotateMesh(float)
  type: Method
  source:
    remote:
      path: RayGame/Mesh.cs
      branch: main
      repo: https://github.com/Kraaven/RayEngine.git
    id: RotateMesh
    path: ../RayGame/Mesh.cs
    startLine: 103
  assemblies:
  - RayGame
  namespace: RayGame
  summary: Rotates the entire mesh by the specified angle.
  example: []
  syntax:
    content: public Mesh RotateMesh(float Angle)
    parameters:
    - id: Angle
      type: System.Single
      description: The angle in degrees by which to rotate the mesh.
    return:
      type: RayGame.Mesh
      description: The rotated mesh.
    content.vb: Public Function RotateMesh(Angle As Single) As Mesh
  overload: RayGame.Mesh.RotateMesh*
  nameWithType.vb: Mesh.RotateMesh(Single)
  fullName.vb: RayGame.Mesh.RotateMesh(Single)
  name.vb: RotateMesh(Single)
- uid: RayGame.Mesh.ScaleMesh(System.Single)
  commentId: M:RayGame.Mesh.ScaleMesh(System.Single)
  id: ScaleMesh(System.Single)
  parent: RayGame.Mesh
  langs:
  - csharp
  - vb
  name: ScaleMesh(float)
  nameWithType: Mesh.ScaleMesh(float)
  fullName: RayGame.Mesh.ScaleMesh(float)
  type: Method
  source:
    remote:
      path: RayGame/Mesh.cs
      branch: main
      repo: https://github.com/Kraaven/RayEngine.git
    id: ScaleMesh
    path: ../RayGame/Mesh.cs
    startLine: 123
  assemblies:
  - RayGame
  namespace: RayGame
  summary: Scales the entire mesh by the specified scale factor.
  example: []
  syntax:
    content: public Mesh ScaleMesh(float Scale)
    parameters:
    - id: Scale
      type: System.Single
      description: The scale factor by which to scale the mesh.
    return:
      type: RayGame.Mesh
      description: The scaled mesh.
    content.vb: Public Function ScaleMesh(Scale As Single) As Mesh
  overload: RayGame.Mesh.ScaleMesh*
  nameWithType.vb: Mesh.ScaleMesh(Single)
  fullName.vb: RayGame.Mesh.ScaleMesh(Single)
  name.vb: ScaleMesh(Single)
- uid: RayGame.Mesh.GetVertexArray
  commentId: M:RayGame.Mesh.GetVertexArray
  id: GetVertexArray
  parent: RayGame.Mesh
  langs:
  - csharp
  - vb
  name: GetVertexArray()
  nameWithType: Mesh.GetVertexArray()
  fullName: RayGame.Mesh.GetVertexArray()
  type: Method
  source:
    remote:
      path: RayGame/Mesh.cs
      branch: main
      repo: https://github.com/Kraaven/RayEngine.git
    id: GetVertexArray
    path: ../RayGame/Mesh.cs
    startLine: 134
  assemblies:
  - RayGame
  namespace: RayGame
  summary: Gets the vertices of the mesh as an array.
  example: []
  syntax:
    content: public Vector2[] GetVertexArray()
    return:
      type: System.Numerics.Vector2[]
      description: An array of <xref href="System.Numerics.Vector2" data-throw-if-not-resolved="false"></xref> representing the vertices of the mesh.
    content.vb: Public Function GetVertexArray() As Vector2()
  overload: RayGame.Mesh.GetVertexArray*
- uid: RayGame.Mesh.DeleteVertex(System.Int32)
  commentId: M:RayGame.Mesh.DeleteVertex(System.Int32)
  id: DeleteVertex(System.Int32)
  parent: RayGame.Mesh
  langs:
  - csharp
  - vb
  name: DeleteVertex(int)
  nameWithType: Mesh.DeleteVertex(int)
  fullName: RayGame.Mesh.DeleteVertex(int)
  type: Method
  source:
    remote:
      path: RayGame/Mesh.cs
      branch: main
      repo: https://github.com/Kraaven/RayEngine.git
    id: DeleteVertex
    path: ../RayGame/Mesh.cs
    startLine: 143
  assemblies:
  - RayGame
  namespace: RayGame
  summary: Deletes a vertex at the specified index.
  example: []
  syntax:
    content: public void DeleteVertex(int Index)
    parameters:
    - id: Index
      type: System.Int32
      description: The index of the vertex to delete.
    content.vb: Public Sub DeleteVertex(Index As Integer)
  overload: RayGame.Mesh.DeleteVertex*
  nameWithType.vb: Mesh.DeleteVertex(Integer)
  fullName.vb: RayGame.Mesh.DeleteVertex(Integer)
  name.vb: DeleteVertex(Integer)
- uid: RayGame.Mesh.DeleteLastVertex
  commentId: M:RayGame.Mesh.DeleteLastVertex
  id: DeleteLastVertex
  parent: RayGame.Mesh
  langs:
  - csharp
  - vb
  name: DeleteLastVertex()
  nameWithType: Mesh.DeleteLastVertex()
  fullName: RayGame.Mesh.DeleteLastVertex()
  type: Method
  source:
    remote:
      path: RayGame/Mesh.cs
      branch: main
      repo: https://github.com/Kraaven/RayEngine.git
    id: DeleteLastVertex
    path: ../RayGame/Mesh.cs
    startLine: 151
  assemblies:
  - RayGame
  namespace: RayGame
  summary: Deletes a Vertex from the last position.
  example: []
  syntax:
    content: public void DeleteLastVertex()
    content.vb: Public Sub DeleteLastVertex()
  overload: RayGame.Mesh.DeleteLastVertex*
- uid: RayGame.Mesh.DeleteVertex(System.ValueTuple{System.Single,System.Single})
  commentId: M:RayGame.Mesh.DeleteVertex(System.ValueTuple{System.Single,System.Single})
  id: DeleteVertex(System.ValueTuple{System.Single,System.Single})
  parent: RayGame.Mesh
  langs:
  - csharp
  - vb
  name: DeleteVertex((float, float))
  nameWithType: Mesh.DeleteVertex((float, float))
  fullName: RayGame.Mesh.DeleteVertex((float, float))
  type: Method
  source:
    remote:
      path: RayGame/Mesh.cs
      branch: main
      repo: https://github.com/Kraaven/RayEngine.git
    id: DeleteVertex
    path: ../RayGame/Mesh.cs
    startLine: 160
  assemblies:
  - RayGame
  namespace: RayGame
  summary: Deletes a vertex that matches the specified point.
  example: []
  syntax:
    content: public void DeleteVertex((float, float) point)
    parameters:
    - id: point
      type: System.ValueTuple{System.Single,System.Single}
      description: The point representing the vertex to delete.
    content.vb: Public Sub DeleteVertex(point As (Single, Single))
  overload: RayGame.Mesh.DeleteVertex*
  nameWithType.vb: Mesh.DeleteVertex((Single, Single))
  fullName.vb: RayGame.Mesh.DeleteVertex((Single, Single))
  name.vb: DeleteVertex((Single, Single))
- uid: RayGame.Mesh.InsertVertex(System.Int32,System.Numerics.Vector2)
  commentId: M:RayGame.Mesh.InsertVertex(System.Int32,System.Numerics.Vector2)
  id: InsertVertex(System.Int32,System.Numerics.Vector2)
  parent: RayGame.Mesh
  langs:
  - csharp
  - vb
  name: InsertVertex(int, Vector2)
  nameWithType: Mesh.InsertVertex(int, Vector2)
  fullName: RayGame.Mesh.InsertVertex(int, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: RayGame/Mesh.cs
      branch: main
      repo: https://github.com/Kraaven/RayEngine.git
    id: InsertVertex
    path: ../RayGame/Mesh.cs
    startLine: 171
  assemblies:
  - RayGame
  namespace: RayGame
  summary: Inserts a vertex at the specified index.
  example: []
  syntax:
    content: public void InsertVertex(int Index, Vector2 Vertex)
    parameters:
    - id: Index
      type: System.Int32
      description: The index at which to insert the vertex.
    - id: Vertex
      type: System.Numerics.Vector2
      description: The vertex to insert.
    content.vb: Public Sub InsertVertex(Index As Integer, Vertex As Vector2)
  overload: RayGame.Mesh.InsertVertex*
  nameWithType.vb: Mesh.InsertVertex(Integer, Vector2)
  fullName.vb: RayGame.Mesh.InsertVertex(Integer, System.Numerics.Vector2)
  name.vb: InsertVertex(Integer, Vector2)
references:
- uid: RayGame.MeshRenderer
  commentId: T:RayGame.MeshRenderer
  href: RayGame.MeshRenderer.html
  name: MeshRenderer
  nameWithType: MeshRenderer
  fullName: RayGame.MeshRenderer
- uid: RayGame.GameObject
  commentId: T:RayGame.GameObject
  parent: RayGame
  href: RayGame.GameObject.html
  name: GameObject
  nameWithType: GameObject
  fullName: RayGame.GameObject
- uid: RayGame
  commentId: N:RayGame
  href: RayGame.html
  name: RayGame
  nameWithType: RayGame
  fullName: RayGame
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: RayGame.Mesh
  commentId: T:RayGame.Mesh
  parent: RayGame
  href: RayGame.Mesh.html
  name: Mesh
  nameWithType: Mesh
  fullName: RayGame.Mesh
- uid: RayGame.Mesh.#ctor*
  commentId: Overload:RayGame.Mesh.#ctor
  href: RayGame.Mesh.html#RayGame_Mesh__ctor_System_ValueTuple_System_Single_System_Single____
  name: Mesh
  nameWithType: Mesh.Mesh
  fullName: RayGame.Mesh.Mesh
  nameWithType.vb: Mesh.New
  fullName.vb: RayGame.Mesh.New
  name.vb: New
- uid: System.ValueTuple{System.Single,System.Single}[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: (float, float)[]
  nameWithType: (float, float)[]
  fullName: (float, float)[]
  nameWithType.vb: (Single, Single)()
  fullName.vb: (Single, Single)()
  name.vb: (Single, Single)()
  spec.csharp:
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: '['
  - name: ']'
  spec.vb:
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: (
  - name: )
- uid: System.Numerics.Vector2
  commentId: T:System.Numerics.Vector2
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
- uid: System.Numerics.Vector2[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: System.Numerics.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: System.Numerics.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: (
  - name: )
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: RayGame.Mesh.AddVertices*
  commentId: Overload:RayGame.Mesh.AddVertices
  href: RayGame.Mesh.html#RayGame_Mesh_AddVertices_System_Numerics_Vector2___
  name: AddVertices
  nameWithType: Mesh.AddVertices
  fullName: RayGame.Mesh.AddVertices
- uid: RayGame.Mesh.AddVertex*
  commentId: Overload:RayGame.Mesh.AddVertex
  href: RayGame.Mesh.html#RayGame_Mesh_AddVertex_System_Numerics_Vector2_
  name: AddVertex
  nameWithType: Mesh.AddVertex
  fullName: RayGame.Mesh.AddVertex
- uid: System.ValueTuple{System.Single,System.Single}
  commentId: T:System.ValueTuple{System.Single,System.Single}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: (float, float)
  nameWithType: (float, float)
  fullName: (float, float)
  nameWithType.vb: (Single, Single)
  fullName.vb: (Single, Single)
  name.vb: (Single, Single)
  spec.csharp:
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: RayGame.Mesh.ShiftMesh*
  commentId: Overload:RayGame.Mesh.ShiftMesh
  href: RayGame.Mesh.html#RayGame_Mesh_ShiftMesh_System_Numerics_Vector2_
  name: ShiftMesh
  nameWithType: Mesh.ShiftMesh
  fullName: RayGame.Mesh.ShiftMesh
- uid: RayGame.Mesh.RotateMesh*
  commentId: Overload:RayGame.Mesh.RotateMesh
  href: RayGame.Mesh.html#RayGame_Mesh_RotateMesh_System_Single_
  name: RotateMesh
  nameWithType: Mesh.RotateMesh
  fullName: RayGame.Mesh.RotateMesh
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: RayGame.Mesh.ScaleMesh*
  commentId: Overload:RayGame.Mesh.ScaleMesh
  href: RayGame.Mesh.html#RayGame_Mesh_ScaleMesh_System_Single_
  name: ScaleMesh
  nameWithType: Mesh.ScaleMesh
  fullName: RayGame.Mesh.ScaleMesh
- uid: RayGame.Mesh.GetVertexArray*
  commentId: Overload:RayGame.Mesh.GetVertexArray
  href: RayGame.Mesh.html#RayGame_Mesh_GetVertexArray
  name: GetVertexArray
  nameWithType: Mesh.GetVertexArray
  fullName: RayGame.Mesh.GetVertexArray
- uid: RayGame.Mesh.DeleteVertex*
  commentId: Overload:RayGame.Mesh.DeleteVertex
  href: RayGame.Mesh.html#RayGame_Mesh_DeleteVertex_System_Int32_
  name: DeleteVertex
  nameWithType: Mesh.DeleteVertex
  fullName: RayGame.Mesh.DeleteVertex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: RayGame.Mesh.DeleteLastVertex*
  commentId: Overload:RayGame.Mesh.DeleteLastVertex
  href: RayGame.Mesh.html#RayGame_Mesh_DeleteLastVertex
  name: DeleteLastVertex
  nameWithType: Mesh.DeleteLastVertex
  fullName: RayGame.Mesh.DeleteLastVertex
- uid: RayGame.Mesh.InsertVertex*
  commentId: Overload:RayGame.Mesh.InsertVertex
  href: RayGame.Mesh.html#RayGame_Mesh_InsertVertex_System_Int32_System_Numerics_Vector2_
  name: InsertVertex
  nameWithType: Mesh.InsertVertex
  fullName: RayGame.Mesh.InsertVertex
